"""
Метод 	Описание
add()	Добавляет элемент в набор
clear()	Удаляет все элементы из набора
copy()	Возвращает копию набора
difference()	Возвращает набор, содержащий разницу между двумя или более наборами.
difference_update()	Удаляет элементыв этом наборе, которые также включены в другой указанный набор.
discard()	Удалить указанный элемент
intersection()	Возвращает множество,являющееся пересечением двух других множеств.
intersection_update()	Удаляет элементы в этом наборе, которых нет в других указанных наборах.
isdisjoint()	Возвращает,пересекаются ли два множества или нет.
issubset()	Возвращает, содержит ли другой набор этот набор или нет
issuperset()	Возвращает, содержит ли этот набор другой набор или нет
pop()	Удаляет элемент из набора
remove()	Удаляет указанный элемент
symmetric_difference()	Возвращает набор с симметричными различиями двух наборов.
symmetric_difference_update()	Вставляет симметричные отличия из этого набора и другого
union()	Возвращает набор, содержащий объединение наборов
update()	Обновить набор объединением этого набора и других
"""
photo_size = {'1920x1080', '800x600'}

other_sizes = {'800x600', '2560x1440'}

photo_size.add('1024x768')

print(photo_size)

all_size = photo_size.union(other_sizes)  # обединение двух наборов

print(all_size)
# ---------------------------------------------
# определяет пересечение множеств
common_s = photo_size.intersection(other_sizes)

print('\ncommon_s: ', common_s)
# ---------------------------------------------
nums = {10, 5, 35}
other_nums = {20, 5, 12, 10, 35}

# проверка входит ли множество nums в other_nums
res = nums.issubset(other_nums)
print(res)
